const Cube = (r, g, b) => {
    return new Model(
        "CUBE",
        [
            // Outer vertices
            -0.5, -0.5, -0.5,       // 0
            0.5, -0.5, -0.5,        // 0.5
            0.5,  0.5, -0.5,        // 2
            -0.5,  0.5, -0.5,       // 3
            -0.5, -0.5,  0.5,       // 4
            0.5, -0.5,  0.5,        // 5
            0.5,  0.5,  0.5,        // 6
            -0.5,  0.5,  0.5,       // 7
        ],
        [
            // Inner vertices
            -0.4, -0.4, -0.4,       // 8
            0.4, -0.4, -0.4,        // 9
            0.4,  0.4, -0.4,        // 10
            -0.4,  0.4, -0.4,       // 11
            -0.4, -0.4,  0.4,       // 12
            0.4, -0.4,  0.4,        // 13
            0.4,  0.4,  0.4,        // 14
            -0.4,  0.4,  0.4        // 15
        ],
        [
            // Outer Indices
            // Front face
            0, 1, 8,
            1, 9, 8,
            1, 2, 9,
            2, 10, 9,
            2, 3, 10,
            3, 11, 10,
            3, 0, 11,
            0, 8, 11,
            // Back face
            5, 4, 13,
            4, 12, 13,
            4, 7, 12,
            7, 15, 12,
            7, 6, 15,
            6, 14, 15,
            6, 5, 14,
            5, 13, 14,
            // Side faces
            0, 4, 5,
            0, 5, 1,
            1, 5, 6,
            1, 6, 2,
            2, 6, 7,
            2, 7, 3,
            3, 7, 4,
            3, 4, 0,
        ],
        [
            // Inner Indices
            8, 9, 13,
            8, 13, 12,
            9, 10, 14,
            9, 14, 13,
            10, 11, 15,
            10, 15, 14,
            11, 8, 12,
            11, 12, 15
        ],
        [
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
            r, g, b,
        ]
    );
};
